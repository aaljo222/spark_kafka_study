version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  spark:
    image: bitnami/spark:latest
    container_name: spark
    depends_on:
      - kafka
      - mongodb
    environment:
      SPARK_MODE: master
    volumes:
      - ./spark-app/app.jar:/app/app.jar
      - ./spark-app/.env:/app/.env   # ✅ .env 마운트 추가
    working_dir: /app
    command:
      [
        "bash",
        "-c",
        "sleep 10 && /opt/bitnami/spark/bin/spark-submit --master local[*] --class com.example.StreamingCombineByKeyApp /app/app.jar",
      ]

  api:
    build: ./node-api
    container_name: api
    depends_on:
      - mongodb
    ports:
      - "4000:4000"
    env_file:
      - ./node-api/.env

  react:
    build: ./react-app
    container_name: react
    depends_on:
      - api
    ports:
      - "3000:3000"
    environment:
      - HOST=0.0.0.0
    volumes:
      - ./react-app:/app

volumes:
  mongo_data:
